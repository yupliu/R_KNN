rtvs::debug_source("~/visual studio 2017/Projects/rproject1/rproject1/script.R")
Q
rtvs::debug_source("~/visual studio 2017/Projects/rproject1/rproject1/script.R")
a <- 2 b <- 3 c <- a + b print(c)
source("~/visual studio 2017/Projects/rproject1/rproject1/script.R")
data()
CO2
source("~/visual studio 2017/Projects/rproject1/rproject1/script.R")
source("~/visual studio 2017/Projects/rproject1/rproject1/script.R")
library()
data()
mtcars
head(mtcars)
sd(mtcars$mpg)
var(mtcars$mpg)
IQR(mtcars$mpg)
mt
mtcars
table(mtcars$gear)
table(mtcars$carb)
prop.table(mtcars$gear)
table(mtcars$gear)
prop.table(mtcars$gear)
wbcd <- read.csv(url("http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data"))
wbcd
wbcd <- read.csv(url("http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data"))
library(shiny) runApp()
colnames(wbcd) <- c("id", "class", "radius_mean", "radius_sd", "radius_largest", "texture_mean", "texture_sd", "texture_largest", "perimeter_mean", "perimeter_sd", "perimeter_largest", "area_mean", "area_sd", "area_largest", "smoothness_mean", "smoothness_sd", "smoothness_largest", "compactness_mean", "compactness_sd", "compactness_largest", "concavity_mean", "concavity_sd", "concavity_largest", "concavepoints _mean", "concavepoints _sd", "concavepoints _largest", "symmetry_mean", "symmetry_sd", "symmetry_largest", "fractaldimension_mean", "fractaldimension_sd", "fractaldimension_largest")
wbcd
head(wbcd)
table(wbcd$class)
prop.table(table(wbcd$class))
round(prop.table(table(wbcd$class))*100)
wbcd.count
wbcd.count()
len
length(wbcd)
wbcd.len
wbcd.length()
wbcd.count()
rows(wbcd).count
summary(wbcd)
nrow(wbcd)
library(shiny) runApp()
package.install("shiny")
install.packages("shinyd")
install.packages("shiny")
library(shiny) runApp()
wbcd_train <- wbcd[,-1]
wbcd_train
head(wbcd_train)
normlize <- function(x) {     return ((x-min(x))/(max(x)-min(x))) }
normalizePath(normalize <- function(x) {     return ((x-min(x))/(max(x)-min(x))) })
normalize <- function(x) {     return ((x-min(x))/(max(x)-min(x))) }
normalize(c(1,2,3,4,5))
wbcd_train_data <- as.data.frame(lapply(wbcd_train[2,31],normailize))
wbcd_train_data <- as.data.frame(lapply(wbcd_train[2,31],normalize))
summray(wbcd_train_data)
summaray(wbcd_train_data)
summary(wbcd_train_data)
summary(wbcd_train)
summary(wbcd_train_data)
wbcd_train_data <- lapply(wbcd_train[2,31],normalize)
summary(wbcd_train_data)
wbcd_train[2,31]
wbcd_train_data <- as.data.frame(lapply(wbcd_train[2:31],normalize))
summary(wbcd_train_data)
wbcd_train_ftr <- as.data.frame(lapply(wbcd_train[2:31], normalize))
wbcd_train_label <- factor(wbcd_train$class, levels = c("B", "M"), labels = c("Benign", "Maligant"))
wbcd_train_label
factor(wbcd_ta)
factor(wbcd_train_label)
factor(wbcd_train_label)
?factor
wbcd_train_ftr[569]
wbcd_train_ftr[568]
wbcd_train_ftr[568,]
wbcd_train_ftr[569,]
wbcd_train_ftr <- wbcd_ftr[1:469,] wbcd_test_ftr <- wbcd_ftr[470:wbcd_train_ftr <- wbcd_ftr[1:469,] wbcd_test_ftr <- wbcd_ftr[470:568,],]
wbcd_train_ftr <- wbcd_ftr[1:469,] wbcd_test_ftr <- wbcd_ftr[470:568,]
wbcd_ftr <- as.data.frame(lapply(wbcd_train[2:31], normalize))
wbcd_train_ftr <- wbcd_ftr[1:469,] wbcd_test_ftr <- wbcd_ftr[470:568,]
wbcd_label <- factor(wbcd_train$class, levels = c("B", "M"), labels = c("Benign", "Maligant"))
wbcd_train_label <- wbcd_label[1:469] wbcd_test_label <- wbcd_label[470:568]
?require
(if (!require("class", quietly = TRUE) ) install.packages("class")) library("class") (if (!require("gmodels", quietly = TRUE) ) install.packages("gmodels")) library("gmodels")
(if (!require("class", quietly = TRUE) ) install.packages("class"))
library("class")
wbcd_pred <- knn(wbcd_train_ftr, wbcd_test_ftr, wbcd_train_label, 21)
wbcd_pred
CrossTable(wbcd_test_label,wbcd_pred,prop.chisq=FALSE)
(if (!require("caret", quietly = TRUE)) install.packages("caret")) library("caret")
library("caret")
train_set <- createDataPartition(wbcd_ftr, p = 0.8, list = FALSE)
train_set <- createDataPartition(wbcd_label, p = 0.8, list = FALSE)
train_set
wbcd_train_ftr <- wbcd_ftr[trainset,]
wbcd_train_ftr <- wbcd_ftr[train_set,]
(if (!require("caret", quietly = TRUE)) install.packages("caret")) library("caret") train_set <- createDataPartition(wbcd_label, p = 0.8, list = FALSE) wbcd_train_ftr <- wbcd_ftr[train_set,] wbcd_train_label <- wbcd_label[train_set,] wbcd_test_ftr <- wbcd_ftr[-train_set,] wbcd_test_label <- wbcd_label[-train_set,] wbcd_pred1 <- knn(wbcd_train_ftr, wbcd_test_ftr, wbcd_train_label,21) CrossTable(wbcd_test_label, wbcd_pred1, prop.chisq = FALSE)
(if (!require("caret", quietly = TRUE)) install.packages("caret"))
library("caret")
train_set <- createDataPartition(wbcd_label, p = 0.8, list = FALSE)
wbcd_train_ftr <- wbcd_ftr[train_set,] wbcd_train_label <- wbcd_label[train_set,] wbcd_test_ftr <- wbcd_ftr[-train_set,] wbcd_test_label <- wbcd_label[-train_set,]
wbcd_train_ftr <- wbcd_ftr[train_set,] wbcd_train_label <- wbcd_label[train_set,] wbcd_test_ftr <- wbcd_ftr[-train_set,] wbcd_test_label <- wbcd_label[-train_set]
wbcd_train_ftr <- wbcd_ftr[train_set,] wbcd_train_label <- wbcd_label[train_set] wbcd_test_ftr <- wbcd_ftr[-train_set,] wbcd_test_label <- wbcd_label[-train_set]
wbcd_pred1 <- knn(wbcd_train_ftr, wbcd_test_ftr, wbcd_train_label,21)
CrossTable(wbcd_test_label, wbcd_pred1, prop.chisq = FALSE)
seed <- 9070 set.seed(seed)
cs_split <- createFolds(wbcd_label, k = 10, returnTrain = TRUE)
cs_split
str(cs_split)
cs_split$Fold01
cs_
